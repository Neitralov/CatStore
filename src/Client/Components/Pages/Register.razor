@page "/register"
@layout EmptyLayout
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Регистрация — CatStore</PageTitle>

<div class="xl:container w-full grid grid-cols-12 xl:gap-5 gap-4 content-center grow">
    <Panel CssClasses="xl:col-span-4 col-span-6 xl:col-start-5 col-start-4 flex flex-col gap-3">
        <h1 class="text-xl text-center">Регистрация</h1>
        <InputFieldWithLabel Label="Электронная почта" InputType="email" @bind-Value="Email" />
        <InputFieldWithLabel Label="Пароль" InputType="password" @bind-Value="Password" />
        <InputFieldWithLabel Label="Повторите пароль" InputType="password" @bind-Value="ConfirmPassword" />
        <p class="text-attention">@ErrorMessage</p>
        <div class="flex justify-between gap-3">
            <ApplyButton OnClick="HandleRegister">Зарегистрироваться</ApplyButton>
            <Button OnClick="Back">Назад</Button>
        </div>
    </Panel>
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ConfirmPassword { get; set; } = string.Empty;

    private string ErrorMessage { get; set; } = string.Empty;

    private async Task HandleRegister()
    {
        var request = new CreateUserRequest(Email, Password, ConfirmPassword);
        var response = await HttpClient.PostAsJsonAsync("/api/users", request);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            var result = await response.Content.ReadFromJsonAsync<ProblemDetails>();
            ErrorMessage = result!.GetFirstErrorMessage();
        }
    }

    private void Back()
    {
        NavigationManager.NavigateTo("/login");
    }
}