@page "/orders"
@layout ProfileLayout
@inject HttpClient HttpClient
@attribute [Authorize]

<PageTitle>Заказы — CatStore</PageTitle>

@if (Orders.Count > 0)
{
    <Panel CssClasses="flex flex-col md:gap-3 gap-2">
        @foreach(var order in Orders)
        {
            <details class="md:px-5 px-3 py-2 bg-background rounded-lg hover:cursor-pointer hover:shadow-md" name="order">
                <summary class="flex justify-between">
                    <span class="basis-2/3">Заказ @order.OrderId <span class="text-xs text-muted">от @order.OrderDate.ToShortDateString() </span></span>
                    <span class="basis-1/3 text-end">Итого: @($"{order.TotalPrice:C0}")</span>
                </summary>

                <div class="flex flex-col gap-2 md:mt-3 mt-2">
                    @foreach(var orderItem in order.Cats)
                    {
                        <div class="flex justify-between">
                            <span>@orderItem.Name</span>
                            <span><span class="text-muted">@orderItem.Quantity шт. x @($"{orderItem.TotalPrice / orderItem.Quantity:C0}") = </span>@($"{orderItem.TotalPrice:C0}")</span>
                        </div>
                        <hr class="last:hidden" />
                    }
                </div>
            </details>
        }
    </Panel>
}
else if (HasDataLoaded)
{
    <h1 class="col-span-12 md:text-sm text-xs">Вы еще не сделали ни одного заказа. Перейдите в <a class="text-primary hover:cursor-pointer hover:underline" href="/cart">Корзину</a>, чтобы оформить заказ.</h1>
}

@code {
    private List<OrderResponse> Orders { get; set; } = [];
        
    private bool HasDataLoaded { get; set; }
        
    protected override async Task OnInitializedAsync()
    {
        Orders = await HttpClient.GetFromJsonAsync<List<OrderResponse>>("/api/orders") ?? [];
            
        HasDataLoaded = true;
    }
}